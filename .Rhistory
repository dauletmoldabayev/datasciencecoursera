pollutantmean <- function(directory = "specdata", pollutant, id = 1){
# testing that 'pollutant' got a correct value: "sulfate" or "nitrate"
if(!identical(pollutant,"sulfate") & !identical(pollutant,"nitrate")){
print("Error: pollutant name is not correct!")
break
}
# testing that 'id' is not greater than number of files in the
# directory
# 1st: compute number of files in the 'directory'
# and collect their names along
filenames <- list.files(directory, pattern = "*.csv", full.names = T)
number_of_files <- length(filesnames)
# 2nd: check if values of 'id' are
# in range between 1 and 'number_of_files'
if( length(id[id >0 & id < number_of_files + 1]) != length(id) ){
print("Error: the values of 'id' are not in range!")
break
}
# make a handy function to construct filenames from 'id' values
namestrings <- function(id){
names <- vector( length(id), mode = "character" )
for(i in 1:length(id)){
if(id[i]<10){
names[i] <- paste( directory, "/", 0, 0, id[i],
".csv", sep = "", collapse = "")
}
else if(id[i]>9 & id[i]<100){
names[i] <- paste( directory, "/", 0, id[i],
".csv", sep = "", collapse = "")
}
else{
names[i] <- paste( directory, "/", id[i],
".csv", sep = "", collapse = "")
}
}
names
}
# function to gather values of 'pollutant' accross files with given 'id'
# excluding 'NA'
pollutantvalues <- function( dummy_variable ){
values <- c(0) # stores the sum of pollutant values
amount <- c(0) # stores number of summed observations
# define which column is needed
prep <- read.csv(filenames[1], nrows = 2)
columns <- colnames(prep)
colselect <- rep("NULL", length(columns))
colselect[ columns == pollutant ] <- NA
# loop through filenames
for(name in filenames){
# choosing files by IDs looping over 'id'
for (i in id){
prep <- read.csv(names, nrows = 2)
if(prep$ID[1] == i){
# read the needed column -- saves memory
mydata <- read.csv(name,
colClasses = colselect)
# exclude 'NA' values from data
mydata <- mydata[!is.na(mydata)]
# collect data to final vector 'values'
values <- values + sum(mydata)
amount <- amount + length(mydata)
}
else{
next
}
}
}
remove(filenames, prep, columns, colselect, mydata)
c(values,amount) #this gives the required mean value
}
cleandata <- pollutantvalues()
print(paste(c("Mean value for ", pollutant, " accross file ids ",
as.character(min(id)), ":" , as.character(max(id)),
" is computed!!!"), collapse = ""))
cleandata[1]/cleandata[2]
}
mean1 <- pollutantmean(pollutant = "sulfate")
pollutantmean <- function(directory = "specdata", pollutant, id = 1){
# testing that 'pollutant' got a correct value: "sulfate" or "nitrate"
if(!identical(pollutant,"sulfate") & !identical(pollutant,"nitrate")){
print("Error: pollutant name is not correct!")
break
}
# testing that 'id' is not greater than number of files in the
# directory
# 1st: compute number of files in the 'directory'
# and collect their names along
filenames <- list.files(directory, pattern = "*.csv", full.names = T)
number_of_files <- length(filenames)
# 2nd: check if values of 'id' are
# in range between 1 and 'number_of_files'
if( length(id[id >0 & id < number_of_files + 1]) != length(id) ){
print("Error: the values of 'id' are not in range!")
break
}
# make a handy function to construct filenames from 'id' values
namestrings <- function(id){
names <- vector( length(id), mode = "character" )
for(i in 1:length(id)){
if(id[i]<10){
names[i] <- paste( directory, "/", 0, 0, id[i],
".csv", sep = "", collapse = "")
}
else if(id[i]>9 & id[i]<100){
names[i] <- paste( directory, "/", 0, id[i],
".csv", sep = "", collapse = "")
}
else{
names[i] <- paste( directory, "/", id[i],
".csv", sep = "", collapse = "")
}
}
names
}
# function to gather values of 'pollutant' accross files with given 'id'
# excluding 'NA'
pollutantvalues <- function( dummy_variable ){
values <- c(0) # stores the sum of pollutant values
amount <- c(0) # stores number of summed observations
# define which column is needed
prep <- read.csv(filenames[1], nrows = 2)
columns <- colnames(prep)
colselect <- rep("NULL", length(columns))
colselect[ columns == pollutant ] <- NA
# loop through filenames
for(name in filenames){
# choosing files by IDs looping over 'id'
for (i in id){
prep <- read.csv(names, nrows = 2)
if(prep$ID[1] == i){
# read the needed column -- saves memory
mydata <- read.csv(name,
colClasses = colselect)
# exclude 'NA' values from data
mydata <- mydata[!is.na(mydata)]
# collect data to final vector 'values'
values <- values + sum(mydata)
amount <- amount + length(mydata)
}
else{
next
}
}
}
remove(filenames, prep, columns, colselect, mydata)
c(values,amount) #this gives the required mean value
}
cleandata <- pollutantvalues()
print(paste(c("Mean value for ", pollutant, " accross file ids ",
as.character(min(id)), ":" , as.character(max(id)),
" is computed!!!"), collapse = ""))
cleandata[1]/cleandata[2]
}
mean1 <- pollutantmean(pollutant = "sulfate")
id
filenames <- list.files(directory, pattern = "*.csv", full.names = T)
number_of_files <- length(filenames)
values <- c(0) # stores the sum of pollutant values
amount <- c(0) # stores number of summed observations
# define which column is needed
prep <- read.csv(filenames[1], nrows = 2)
columns <- colnames(prep)
colselect <- rep("NULL", length(columns))
colselect[ columns == pollutant ] <- NA
# loop through filenames
for(name in filenames){
# choosing files by IDs looping over 'id'
for (i in id){
prep <- read.csv(names, nrows = 2)
if(prep$ID[1] == i){
# read the needed column -- saves memory
mydata <- read.csv(name,
colClasses = colselect)
# exclude 'NA' values from data
mydata <- mydata[!is.na(mydata)]
# collect data to final vector 'values'
values <- values + sum(mydata)
amount <- amount + length(mydata)
}
else{
next
}
}
}
remove(filenames, prep, columns, colselect, mydata)
c(values,amount) #this gives the required mean value
values <- c(0) # stores the sum of pollutant values
amount <- c(0) # stores number of summed observations
# define which column is needed
prep <- read.csv(filenames[1], nrows = 2)
columns <- colnames(prep)
colselect <- rep("NULL", length(columns))
colselect[ columns == pollutant ] <- NA
# loop through filenames
for(name in filenames){
# choosing files by IDs looping over 'id'
for (i in id){
prep <- read.csv(names, nrows = 2)
if(prep$ID[1] == i){
# read the needed column -- saves memory
mydata <- read.csv(name,
colClasses = colselect)
# exclude 'NA' values from data
mydata <- mydata[!is.na(mydata)]
# collect data to final vector 'values'
values <- values + sum(mydata)
amount <- amount + length(mydata)
}
else{
next
}
}
}
remove(filenames, prep, columns, colselect)
c(values,amount) #this gives the required mean value
filenames <- list.files(directory, pattern = "*.csv", full.names = T)
number_of_files <- length(filenames)
values <- c(0) # stores the sum of pollutant values
amount <- c(0) # stores number of summed observations
# define which column is needed
prep <- read.csv(filenames[1], nrows = 2)
columns <- colnames(prep)
colselect <- rep("NULL", length(columns))
colselect[ columns == pollutant ] <- NA
# loop through filenames
for(name in filenames){
# choosing files by IDs looping over 'id'
for (i in id){
prep <- read.csv(names, nrows = 2)
if(prep$ID[1] == i){
# read the needed column -- saves memory
mydata <- read.csv(name,
colClasses = colselect)
# exclude 'NA' values from data
mydata <- mydata[!is.na(mydata)]
# collect data to final vector 'values'
values <- values + sum(mydata)
amount <- amount + length(mydata)
}
else{
next
}
}
}
remove(filenames, prep, columns, colselect)
c(values,amount) #this gives the required mean value
pollutant <- "sulfate"
values <- c(0) # stores the sum of pollutant values
amount <- c(0) # stores number of summed observations
# define which column is needed
prep <- read.csv(filenames[1], nrows = 2)
columns <- colnames(prep)
colselect <- rep("NULL", length(columns))
colselect[ columns == pollutant ] <- NA
# loop through filenames
for(name in filenames){
# choosing files by IDs looping over 'id'
for (i in id){
prep <- read.csv(names, nrows = 2)
if(prep$ID[1] == i){
# read the needed column -- saves memory
mydata <- read.csv(name,
colClasses = colselect)
# exclude 'NA' values from data
mydata <- mydata[!is.na(mydata)]
# collect data to final vector 'values'
values <- values + sum(mydata)
amount <- amount + length(mydata)
}
else{
next
}
}
}
remove(filenames, prep, columns, colselect)
c(values,amount) #this gives the required mean value
files <- list.files(directory, pattern = "*.csv", full.names = T)
number_of_files <- length(files)
values <- c(0) # stores the sum of pollutant values
amount <- c(0) # stores number of summed observations
# define which column is needed
prep <- read.csv(files[1], nrows = 2)
columns <- colnames(prep)
colselect <- rep("NULL", length(columns))
colselect[ columns == pollutant ] <- NA
# loop through filenames
for(name in filenames){
# choosing files by IDs looping over 'id'
for (i in id){
prep <- read.csv(names, nrows = 2)
if(prep$ID[1] == i){
# read the needed column -- saves memory
mydata <- read.csv(name,
colClasses = colselect)
# exclude 'NA' values from data
mydata <- mydata[!is.na(mydata)]
# collect data to final vector 'values'
values <- values + sum(mydata)
amount <- amount + length(mydata)
}
else{
next
}
}
}
#remove(files, prep, columns, colselect)
c(values,amount) #this gives the required mean value
a <- "a"
b <- "b"
a+b
paste(a,b)
paste(a,b, sep = '')
?paste
setwd("specdata")
getwd()
setwd("..")
getwd()
setwd("specdata")
files <- list.files(pattern = "*.csv", full.names = T)
number_of_files <- length(files)
values <- c(0) # stores the sum of pollutant values
amount <- c(0) # stores number of summed observations
# define which column is needed
prep <- read.csv(files[1], nrows = 2)
columns <- colnames(prep)
colselect <- rep("NULL", length(columns))
colselect[ columns == pollutant ] <- NA
# loop through filenames
for(name in files){
# choosing files by IDs looping over 'id'
for (i in id){
prep <- read.csv(names, nrows = 2)
if(prep$ID[1] == i){
# read the needed column -- saves memory
mydata <- read.csv(name,
colClasses = colselect)
# exclude 'NA' values from data
mydata <- mydata[!is.na(mydata)]
# collect data to final vector 'values'
values <- values + sum(mydata)
amount <- amount + length(mydata)
}
else{
next
}
}
}
#remove(files, prep, columns, colselect)
c(values,amount) #this gives the required mean value
name <- files[1]
name
files[1]
files <- list.files(path = "", pattern = "*.csv", full.names = T)
number_of_files <- length(files)
files[1]
files <- list.files(path = ".", pattern = "*.csv", full.names = T)
number_of_files <- length(files)
files[1]
prep <- read.csv(files[1], nrows = 2)
prep
for(name in files){
# choosing files by IDs looping over 'id'
for (i in id){
prep <- read.csv(names, nrows = 2)
if(prep$ID[1] == i){
# read the needed column -- saves memory
mydata <- read.csv(name,
colClasses = colselect)
# exclude 'NA' values from data
mydata <- mydata[!is.na(mydata)]
# collect data to final vector 'values'
values <- values + sum(mydata)
amount <- amount + length(mydata)
}
else{
next
}
}
}
# loop through filenames
for(name in files[1]){
# choosing files by IDs looping over 'id'
for (i in idp[1]){
prep <- read.csv(names, nrows = 2)
if(prep$ID[1] == i){
# read the needed column -- saves memory
mydata <- read.csv(name,
colClasses = colselect)
# exclude 'NA' values from data
mydata <- mydata[!is.na(mydata)]
# collect data to final vector 'values'
values <- values + sum(mydata)
amount <- amount + length(mydata)
}
else{
next
}
}
}
# loop through filenames
for(name in files[1]){
# choosing files by IDs looping over 'id'
for (i in id[1]){
prep <- read.csv(names, nrows = 2)
if(prep$ID[1] == i){
# read the needed column -- saves memory
mydata <- read.csv(name,
colClasses = colselect)
# exclude 'NA' values from data
mydata <- mydata[!is.na(mydata)]
# collect data to final vector 'values'
values <- values + sum(mydata)
amount <- amount + length(mydata)
}
else{
next
}
}
}
?read.table
for(name in files[1]){
# choosing files by IDs looping over 'id'
for (i in id[1]){
prep <- read.csv(name, nrows = 2)
if(prep$ID[1] == i){
# read the needed column -- saves memory
mydata <- read.csv(name,
colClasses = colselect)
# exclude 'NA' values from data
mydata <- mydata[!is.na(mydata)]
# collect data to final vector 'values'
values <- values + sum(mydata)
amount <- amount + length(mydata)
}
else{
next
}
}
}
values
amount
values/amount
remove(filenames, prep, columns, colselect)
source('~/Desktop/Rprog/pollutantmean.R')
mean1 <- pollutantmean(pollutant = "sulfate", id = 1:10)
getwd
getwd()
setwd("..")
mean1 <- pollutantmean(pollutant = "sulfate", id = 1:10)
source('~/Desktop/Rprog/pollutantmean.R')
mean1 <- pollutantmean(pollutant = "sulfate", id = 1:10)
mean1
mean1 <- pollutantmean(pollutant = "sulfate", id = 1:332)
mean1
source('~/Desktop/Rprog/pollutantmean.R')
mean1 <- pollutantmean(pollutant = "sulfate", id = 1:332)
mean1
source('~/Desktop/Rprog/pollutantmean.R')
mean1 <- pollutantmean(pollutant = "sulfate", id = 1:332)
source('~/Desktop/Rprog/pollutantmean.R')
mean1 <- pollutantmean(pollutant = "sulfate", id = 1:332)
getwd()
setwd("..")
mean1 <- pollutantmean(pollutant = "sulfate", id = 1:332)
mean1
mean1 <- pollutantmean(pollutant = "nitrate", id = 1:332)
mean1
mean1 <- pollutantmean(pollutant = "nitrate", id = 70:72)
mean1
output <- data.frame()
output
colnames(output) <- c("id", "nobs")
colnames(output)
colnames(output) <- c("id", "nobs")
?colnames
colnames(output, do.NULL = TRUE, prefix = "col")
colnames(output) <- c("id", "nobs")
?data.frame
output <- data.frame(id = integer(0), nobs = integer(0))
output
output
rbind(output, c(1L,1L))
output <- rbind(output, c(1L,1L))
output
output <- data.frame(id = integer(0), nobs = integer(0))
output <- rbind(output, c(1,1))
output
integer(1,1)
integer(1)
as.integer(c(1,1))
output <- rbind(output, as.integer(c(1,1)))
output
output <- data.frame(id = integer(0), nobs = integer(0))
output
output <- rbind(output, as.integer(c(1,1)))
output
output <- data.frame(id = integer(0), nobs = integer(0))
colnames(output)
?data.frame
L3 <- LETTERS[1:3]
fac <- sample(L3, 10, replace = TRUE)
(d <- data.frame(x = 1, y = 1:10, fac = fac))
## The "same" with automatic column names:
data.frame(1, 1:10, sample(L3, 10, replace = TRUE))
is.data.frame(d)
## do not convert to factor, using I() :
(dd <- cbind(d, char = I(letters[1:10])))
rbind(class = sapply(dd, class), mode = sapply(dd, mode))
stopifnot(1:10 == row.names(d))  # {coercion}
(d0  <- d[, FALSE])   # data frame with 0 columns and 10 rows
(d.0 <- d[FALSE, ])   # <0 rows> data frame  (3 named cols)
(d00 <- d0[FALSE, ])  # data frame with 0 columns and 0 rows
